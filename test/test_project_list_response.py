# coding: utf-8

"""
    Respeecher API

    API for interacting with Respeecher services, including key and session management, and calibration functionalities.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from respeecher.models.project_list_response import ProjectListResponse

class TestProjectListResponse(unittest.TestCase):
    """ProjectListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectListResponse:
        """Test ProjectListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectListResponse`
        """
        model = ProjectListResponse()
        if include_optional:
            return ProjectListResponse(
                list = [
                    respeecher.models.project_response.ProjectResponse(
                        name = '', 
                        slug = '', 
                        owner = '', 
                        url = '', 
                        models = respeecher.models.models.models(), 
                        id = '', 
                        active = True, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_recording_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                pagination = respeecher.models.project_list_response_pagination.ProjectListResponse_pagination(
                    count = 56, 
                    limit = 56, 
                    offset = 56, )
            )
        else:
            return ProjectListResponse(
        )
        """

    def testProjectListResponse(self):
        """Test ProjectListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
