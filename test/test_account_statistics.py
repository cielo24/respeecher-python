# coding: utf-8

"""
    Respeecher API

    API for interacting with Respeecher services, including key and session management, and calibration functionalities.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from respeecher.models.account_statistics import AccountStatistics

class TestAccountStatistics(unittest.TestCase):
    """AccountStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountStatistics:
        """Test AccountStatistics
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountStatistics`
        """
        model = AccountStatistics()
        if include_optional:
            return AccountStatistics(
                time_converted = respeecher.models.account_statistics_time_converted.AccountStatistics_time_converted(
                    total = 56, 
                    current_month = 56, 
                    previous_monthes = [
                        respeecher.models.account_statistics_time_converted_previous_monthes_inner.AccountStatistics_time_converted_previous_monthes_inner(
                            month = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            duration = 56, )
                        ], ),
                conversions = respeecher.models.account_statistics_conversions.AccountStatistics_conversions(
                    total = 56, 
                    completed = 56, 
                    in_progress = 56, 
                    failed = 56, ),
                models = [
                    respeecher.models.account_statistics_models_inner.AccountStatistics_models_inner(
                        id = '', 
                        name = '', 
                        conversions_count = 56, 
                        converted_time = 56, )
                    ]
            )
        else:
            return AccountStatistics(
        )
        """

    def testAccountStatistics(self):
        """Test AccountStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
